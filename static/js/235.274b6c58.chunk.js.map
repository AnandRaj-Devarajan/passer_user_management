{"version":3,"file":"static/js/235.274b6c58.chunk.js","mappings":"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","sources":["action/userAction.js","components/EditUser.js","components/UserDetails.js"],"sourcesContent":["export const fetchUsers = () => async dispatch => {\n    dispatch({ type: 'FETCH_USERS_REQUEST' });\n\n    try {\n        const response = await fetch('https://api.escuelajs.co/api/v1/users');\n        if (!response.ok) {\n            throw new Error('Failed to fetch users');\n        }\n        const data = await response.json();\n        dispatch({ type: 'FETCH_USERS_SUCCESS', payload: data });\n    } catch (error) {\n        dispatch({ type: 'FETCH_USERS_FAILURE', payload: error.message });\n    }\n};\n\nexport const addUser = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: 'ADD_USER_REQUEST' });\n        setTimeout(() => {\n            dispatch({ type: 'ADD_USER_SUCCESS', payload: userData });\n        }, 1000);\n    } catch (error) {\n        dispatch({ type: 'ADD_USER_FAILURE', payload: error.message });\n    }\n};\n// actions/userActions.js\nexport const editUser = (userId, userData) => async (dispatch) => {\n    try {\n        dispatch({ type: 'EDIT_USER_REQUEST' });\n        setTimeout(() => {\n            dispatch({ type: 'EDIT_USER_SUCCESS', payload: { userId, userData } });\n        }, 1000);\n    } catch (error) {\n        dispatch({ type: 'EDIT_USER_FAILURE', payload: error.message });\n    }\n};\n// actions/userActions.js\nexport const deleteUser = (userIds) => async (dispatch) => {\n    dispatch({ type: 'DELETE_USER_REQUEST' });\n    try {\n        dispatch({ type: 'DELETE_USER_SUCCESS', payload:  userIds  });\n    } catch (error) {\n        dispatch({ type: 'DELETE_USER_FAILURE', payload: error.message });\n    }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editUser } from '../action/userAction';\n\nconst EditUser = ({ id, open, handleClose, }) => {\n    const dispatch = useDispatch();\n\n    const users = useSelector(state => state.user.users);\n    const loading = useSelector(state => state.user.loading);\n    const [userData, setUserData] = useState({\n        id: '',\n        name: '',\n        email: '',\n        role: 'user'\n    });\n    const [error, setError] = useState({\n        name: '',\n        email: ''\n    });\n\n    const handleChange = (e) => {\n        setUserData({ ...userData, [e.target.name]: e.target.value });\n        setError({ ...error, [e.target.name]: '' });\n    };\n\n    useEffect(() => {\n        setUserData({\n            id: id,\n            name: users[id !== 0 ? id - 1 : id].name,\n            email: users[id !== 0 ? id - 1 : id].email,\n            role: users[id !== 0 ? id - 1 : id].role !== 'user' || 'role' ? 'user' : users[id].role\n        })\n    }, [id])\n\n    const handleSubmit = () => {\n        let hasError = false;\n        if (!userData.name) {\n            setError((prevState) => ({ ...prevState, name: 'Name is required' }));\n            hasError = true;\n        }\n        if (!userData.email) {\n            setError((prevState) => ({ ...prevState, email: 'Email is required' }));\n            hasError = true;\n        } else if (!isValidEmail(userData.email)) {\n            setError((prevState) => ({ ...prevState, email: 'Invalid email address' }));\n            hasError = true;\n        }\n\n        if (!hasError) {\n            dispatch(editUser(userData.id, userData))\n            if (!loading) {\n                handleClose()\n            }\n\n        }\n    }\n    const isValidEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Edit User</DialogTitle>\n            <DialogContent>\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        label=\"Name\"\n                        name=\"name\"\n                        value={userData.name}\n                        onChange={handleChange}\n                        fullWidth\n                        required\n                        error={Boolean(error.name)}\n                        helperText={error.name}\n                        sx={{ mt: 2 }}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={userData.email}\n                        onChange={handleChange}\n                        fullWidth\n                        required\n                        error={Boolean(error.email)}\n                        helperText={error.email}\n                        sx={{ mt: 2 }}\n                    />\n                    <TextField\n                        select\n                        label=\"Role\"\n                        name=\"role\"\n                        value={userData.role}\n                        onChange={handleChange}\n                        fullWidth\n                        required\n                        sx={{ mt: 2 }}\n                    >\n                        <MenuItem value=\"user\">User</MenuItem>\n                        <MenuItem value=\"admin\">Admin</MenuItem>\n                    </TextField>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button variant=\"contained\" onClick={handleSubmit}>Save</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default EditUser;","import React, { useEffect, useState } from 'react'\nimport {  useNavigate, useParams } from 'react-router-dom';\nimport { Box, Button, Container, Paper, Typography } from '@mui/material';\nimport EditUser from './EditUser';\nimport { useSelector } from 'react-redux';\n\nconst UserDetails = () => {\n    const params = useParams()\n    const navigate = useNavigate();\n    const users = useSelector(state => state.user.users);\n    const [userData, setUserData] = useState({\n        id: '',\n        name: '',\n        email: '',\n        role: 'user'\n    });\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => setOpen(false)\n\n    useEffect(() => {\n        if (params.id && users.length > 0) {\n            const user = users.find(user => user.id === Number(params.id));\n            if (user) {\n                setUserData(user);\n            }\n        }\n    }, [users, params.id])\n\n\n    const handleEditUser = () => {\n        setOpen(true)\n    };\n    const handleBack = () => {\n        navigate('/');\n    };\n    return (\n        <Container>\n            <Typography variant=\"h4\" gutterBottom textAlign={'center'} mt={2}>User Details</Typography>\n            <Paper elevation={6} sx={{ mt: 2, p: 2 }}>\n                <Typography variant=\"subtitle1\">ID:{userData.id} </Typography>\n                <Typography variant=\"subtitle1\">Name: {userData.name}</Typography>\n                <Typography variant=\"subtitle1\">Email:{userData.email} </Typography>\n                <Typography variant=\"subtitle1\">Role: {userData.role}</Typography>\n            </Paper>\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"outlined\" onClick={handleBack}>Back</Button>\n                <Button variant=\"contained\" onClick={handleEditUser}>Edit</Button>\n            </Box>\n            <EditUser\n                open={open}\n                handleClose={handleClose}\n                id={params?.id}\n            />\n        </Container>\n    )\n}\n\nexport default UserDetails"],"names":["fetchUsers","async","dispatch","type","response","fetch","ok","Error","payload","json","error","message","addUser","userData","setTimeout","editUser","userId","deleteUser","userIds","_ref","id","open","handleClose","useDispatch","users","useSelector","state","user","loading","setUserData","useState","name","email","role","setError","handleChange","e","target","value","useEffect","handleSubmit","hasError","prevState","isValidEmail","test","_jsxs","Dialog","onClose","children","_jsx","DialogTitle","DialogContent","onSubmit","TextField","label","onChange","fullWidth","required","Boolean","helperText","sx","mt","select","MenuItem","DialogActions","Button","onClick","variant","UserDetails","params","useParams","navigate","useNavigate","setOpen","length","find","Number","Container","Typography","gutterBottom","textAlign","Paper","elevation","p","Box","display","justifyContent","handleBack","handleEditUser","EditUser"],"sourceRoot":""}