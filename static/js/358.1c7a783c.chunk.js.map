{"version":3,"file":"static/js/358.1c7a783c.chunk.js","mappings":"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","sources":["action/userAction.js","utils/common/TableUtils.js","components/DeleteUser.js","components/EnhanceTable.js","components/UserList.js"],"sourcesContent":["export const fetchUsers = () => async dispatch => {\n    dispatch({ type: 'FETCH_USERS_REQUEST' });\n\n    try {\n        const response = await fetch('https://api.escuelajs.co/api/v1/users');\n        if (!response.ok) {\n            throw new Error('Failed to fetch users');\n        }\n        const data = await response.json();\n        dispatch({ type: 'FETCH_USERS_SUCCESS', payload: data });\n    } catch (error) {\n        dispatch({ type: 'FETCH_USERS_FAILURE', payload: error.message });\n    }\n};\n\nexport const addUser = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: 'ADD_USER_REQUEST' });\n        setTimeout(() => {\n            dispatch({ type: 'ADD_USER_SUCCESS', payload: userData });\n        }, 1000);\n    } catch (error) {\n        dispatch({ type: 'ADD_USER_FAILURE', payload: error.message });\n    }\n};\n// actions/userActions.js\nexport const editUser = (userId, userData) => async (dispatch) => {\n    try {\n        dispatch({ type: 'EDIT_USER_REQUEST' });\n        setTimeout(() => {\n            dispatch({ type: 'EDIT_USER_SUCCESS', payload: { userId, userData } });\n        }, 1000);\n    } catch (error) {\n        dispatch({ type: 'EDIT_USER_FAILURE', payload: error.message });\n    }\n};\n// actions/userActions.js\nexport const deleteUser = (userIds) => async (dispatch) => {\n    dispatch({ type: 'DELETE_USER_REQUEST' });\n    try {\n        dispatch({ type: 'DELETE_USER_SUCCESS', payload:  userIds  });\n    } catch (error) {\n        dispatch({ type: 'DELETE_USER_FAILURE', payload: error.message });\n    }\n};\n","import { Box, Checkbox, TableCell, TableHead, TableRow, TableSortLabel } from \"@mui/material\";\nimport { visuallyHidden } from '@mui/utils';\n\nexport function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nexport function EnhancedTableHead(props) {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } =\n        props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        color=\"primary\"\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{\n                            'aria-label': 'select all desserts',\n                        }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\n","import React, { useState } from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Toolbar, Tooltip, Typography } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from \"react-redux\";\nimport { deleteUser } from \"../action/userAction\";\n\n\nexport default function DeleteUserToolbar(props) {\n\n    const { numSelected, selected } = props;\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => setOpen(false);\n\n    return (\n        <div>\n            <Toolbar sx={{ pl: { sm: 2 }, pr: { xs: 1, sm: 1 } }}>\n                {numSelected > 0 ? (\n                    <Typography\n                        sx={{ flex: '1 1 100%' }}\n                        color=\"inherit\"\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <Typography\n                        sx={{ flex: '1 1 100%' }}\n                        variant=\"h6\"\n                        id=\"tableTitle\"\n                        component=\"div\"\n                    >\n                        Users List\n                    </Typography>\n                )}\n\n                {numSelected > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton onClick={() => setOpen(true)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : ''\n                }\n\n            </Toolbar>\n            <DeleteModal\n                open={open}\n                handleClose={handleClose}\n                items={!Array.isArray(selected) ? [selected] : selected}\n            />\n        </div>\n    );\n}\n\nconst DeleteModal = ({ open, handleClose, items }) => {\n    const dispatch = useDispatch();\n\n    const deleteItem = () => {\n        dispatch(deleteUser(items));\n        handleClose()\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle align='center'>Delete User</DialogTitle>\n            <DialogContent>\n                {`Are you sure you want to this ${items.length > 1 ? 'Users?' : 'User?'}`}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button variant=\"contained\" onClick={deleteItem}>Delete</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useEffect, useMemo, useState } from 'react';\nimport { EnhancedTableHead, getComparator, stableSort } from '../utils/common/TableUtils';\nimport { Box, Checkbox, Container, FormControlLabel, Paper, Skeleton, Switch, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow } from '@mui/material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DeleteUserToolbar from './DeleteUser';\n\n\nexport default function EnhancedTable(props) {\n    const navigate = useNavigate();\n    const { users, headCells, loading } = props;\n    const [rows, setRows] = useState([]);\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState('id');\n    const [selected, setSelected] = useState([]);\n    const [page, setPage] = useState(0);\n    const [dense, setDense] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    useEffect(() => {\n        if (!loading && users.length > 0) {\n            setRows(users);\n        }\n    }, [loading, users]);\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelected = rows.map((n) => n.id);\n            setSelected(newSelected);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n        setSelected(newSelected);\n\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    const visibleRows = useMemo(\n        () =>\n\n            stableSort(rows, getComparator(order, orderBy)).slice(\n                page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage,\n            ),\n        [order, orderBy, page, rowsPerPage, rows],\n    );\n\n    if (loading) return (<Container><Skeleton variant=\"rectangular\" width={'100%'} height={500} /></Container>\n    )\n    return (\n        <Box sx={{ width: '100%' }}>\n            <Paper sx={{ width: '100%', mb: 2 }}>\n                <DeleteUserToolbar numSelected={selected.length} selected={selected} />\n                <TableContainer>\n                    <Table\n                        sx={{ minWidth: 750 }}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                    >\n                        <EnhancedTableHead\n                            headCells={headCells}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {visibleRows.map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                        sx={{ cursor: 'pointer' }}\n                                    >\n                                        <TableCell padding=\"checkbox\" hover onClick={(event) => handleClick(event, row.id)}>\n                                            <Checkbox\n                                                color=\"primary\"\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            align=\"left\"\n                                        >\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell align=\"left\" onClick={() => navigate('/user/detail/' + row.id, { state: { row } })}><Link>{row.name}</Link></TableCell>\n                                        <TableCell align=\"left\">{row.email}</TableCell>\n                                        <TableCell align=\"left\">{row.role}</TableCell>\n                                    </TableRow>\n                                );\n                            })\n                            }\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (dense ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            />\n        </Box >\n    );\n}","import { React, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, Stack, Button } from '@mui/material';\nimport { fetchUsers } from '../action/userAction';\nimport { useNavigate } from 'react-router-dom';\nimport EnhancedTable from './EnhanceTable';\n\nconst headCells = [\n\n    {\n        id: 'id',\n        numeric: false,\n        disablePadding: false,\n        label: 'Id'\n    },\n    {\n        id: 'name',\n        numeric: false,\n        disablePadding: false,\n        label: 'User Name'\n    },\n    {\n        id: 'email',\n        numeric: false,\n        disablePadding: false,\n        label: ' Email'\n    },\n    {\n        id: 'role',\n        numeric: false,\n        disablePadding: false,\n        label: 'Role'\n    }\n];\n\n\nfunction UserList() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const users = useSelector(state => state.user.users);\n    const loading = useSelector(state => state.user.loading);\n\n    const [usersList, setUsersList] = useState([]);\n\n    useEffect(() => {\n        if (users.length === 0) {\n            dispatch(fetchUsers());\n        } else {\n            setUsersList(users);\n        }\n    }, [dispatch, users]);\n\n    return (\n        <Box sx={{ width: '100%' }}>\n            <Box p={2}>\n                {usersList?.length ?\n                    <Stack sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        <Button variant=\"contained\" onClick={() => navigate('/user/create-user')}>\n                            Add User\n                        </Button>\n                    </Stack> : ''}\n                <EnhancedTable\n                    users={usersList}\n                    headCells={headCells}\n                    loading={loading}\n                />\n            </Box>\n        </Box>\n    )\n}\n\nexport default UserList"],"names":["fetchUsers","async","dispatch","type","response","fetch","ok","Error","payload","json","error","message","addUser","userData","setTimeout","editUser","userId","deleteUser","userIds","descendingComparator","a","b","orderBy","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","_jsx","TableHead","children","_jsxs","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","numeric","disablePadding","sortDirection","id","TableSortLabel","active","direction","onClick","property","event","label","Box","component","sx","visuallyHidden","DeleteUserToolbar","selected","open","setOpen","useState","Toolbar","pl","sm","pr","xs","Typography","flex","variant","Tooltip","title","IconButton","DeleteIcon","DeleteModal","handleClose","items","Array","isArray","_ref","useDispatch","Dialog","onClose","DialogTitle","DialogContent","concat","length","DialogActions","Button","deleteItem","EnhancedTable","navigate","useNavigate","users","loading","rows","setRows","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","useEffect","emptyRows","Math","max","visibleRows","useMemo","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","Container","Skeleton","width","height","Paper","mb","TableContainer","Table","minWidth","size","target","newSelected","n","handleRequestSort","TableBody","row","isItemSelected","indexOf","labelId","role","tabIndex","cursor","hover","handleClick","selectedIndex","scope","state","Link","name","email","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","value","FormControlLabel","control","Switch","useSelector","user","usersList","setUsersList","p","Stack","display","flexDirection","justifyContent","alignItems"],"sourceRoot":""}